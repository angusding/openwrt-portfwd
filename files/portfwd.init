#!/bin/sh /etc/rc.common
#
# Copyright (C) 2020 pexcn <i@pexcn.me>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=90

USE_PROCD=1
#PROCD_DEBUG=1

append_value() {
	local section="$1"
	local option="$2"
	local default="$3"
	local _loctmp
	config_get _loctmp "$section" "$option" "$default"
	[ -n "$_loctmp" ] || return 0
	procd_append_param command "$_loctmp"
}

append_bool() {
	local section="$1"
	local option="$2"
	local value="$3"
	local default="$4"
	local _loctmp
	config_get_bool _loctmp "$section" "$option" "$default"
	[ "$_loctmp" = 1 ] || return 0
	procd_append_param command "$value"
}

append_param_if_neq() {
	local section="$1"
	local option="$2"
	local switch="$3"
	local compare="$4"
	local _loctmp
	config_get _loctmp "$section" "$option"
	[ -n "$_loctmp" ] || return 0
	[ "$_loctmp" != "$compare" ] || return 0
	procd_append_param command "$switch" "$_loctmp"
}

start_tcpfwd() {
	local enable
	config_get_bool enable $1 enable
	[ "$enable" = 1 ] || return 0

	procd_open_instance
	procd_set_param respawn
	procd_set_param stderr 1
	procd_set_param nice -5
	procd_set_param limits nofile="65535 65535"
	procd_set_param command /usr/bin/tcpfwd
	append_value $1 local_address "127.0.0.1:5300"
	append_value $1 remote_address "8.8.8.8:53"
	append_bool $1 ipv6_only "-o"
	append_bool $1 range_mapping "-b"
	procd_close_instance
}

start_udpfwd() {
	local enable
	config_get_bool enable $1 enable
	[ "$enable" = 1 ] || return 0

	procd_open_instance
	procd_set_param respawn
	procd_set_param stderr 1
	procd_set_param nice -5
	procd_set_param limits nofile="65535 65535"
	procd_set_param command /usr/bin/udpfwd
	append_value $1 local_address "127.0.0.1:5300"
	append_value $1 remote_address "8.8.8.8:53"
	append_param_if_neq $1 timeout "-t" "60"
	append_bool $1 ipv6_only "-o"
	procd_close_instance
}

start_service() {
	config_load portfwd
	config_foreach start_tcpfwd tcpfwd
	config_foreach start_udpfwd udpfwd
}
